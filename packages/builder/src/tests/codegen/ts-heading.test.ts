import { CodeGenForTs } from '../../codegen';
import { Root } from '../../models';
import { mg } from '../test-tools/mg';

const root = new Root({});

const HD = mg`
  /* 该文件由 Nad CLI 生成，请勿手改 */
  /* This file is generated by Nad CLI, do not edit manually. */
  /* eslint-disable */
`;

test('basic', () => {
  const code = new CodeGenForTs(root, { base: '' }).toString().replace(/\s+/g, ' ');
  expect(code).toContain(HD);
  expect(code).toContain(mg`
    import { NadInvoker } from '@huolala-tech/nad-runtime';
    import type { Settings } from '@huolala-tech/nad-runtime';
    export class Runtime<T = unknown> extends NadInvoker<T> { public static base = ''; }
  `);
});

test('noHead', () => {
  const code = new CodeGenForTs(root, { base: '', noHead: true }).toString().replace(/\s+/g, ' ');
  expect(code).not.toContain(HD);
});

test('custom base', () => {
  const code = new CodeGenForTs(root, { base: 'http//localhost' }).toString().replace(/\s+/g, ' ');
  expect(code).toContain(mg`
    export class Runtime<T = unknown> extends NadInvoker<T> { public static base = 'http//localhost'; }
  `);
});

test('custom runtimePkgName', () => {
  const code = new CodeGenForTs(root, { base: '', runtimePkgName: '@xxx/nad-runtime' }).toString().replace(/\s+/g, ' ');
  expect(code).toContain(mg`
    import { NadInvoker } from '@xxx/nad-runtime';
    import type { Settings } from '@xxx/nad-runtime';
  `);
});
